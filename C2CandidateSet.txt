import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.StringTokenizer;

import scala.Array;


public class C2CandidateSet {
	
	public static void main(String args[]) throws FileNotFoundException, UnsupportedEncodingException{
	
	
		File file = new File("C:/Users/KRITHIVASAN CHANDRAN/Desktop/proj_1/CandidateItemSets2.txt");
		File transactionFile = new File("C:/Users/KRITHIVASAN CHANDRAN/Desktop/proj_1/binaryTransactionDB.txt");
		PrintWriter writer1 = new PrintWriter("C:/Users/KRITHIVASAN CHANDRAN/Desktop/proj_1/finalitems.txt", "UTF-8");
		Scanner candidateScan = new Scanner(file);
		Scanner transactionScan = new Scanner(transactionFile);
		StringBuffer buffer = new StringBuffer();
		StringBuffer transactionBuffer = new StringBuffer();
		List<String> itemSet = new ArrayList<>();
		int i = 0;
		int validator = 2;
		transactionScan.useDelimiter(System.getProperty("line.separator")); 
		int frequencycounter = 0;

		// Reading the value from Candidate Scan 2
		
		while(candidateScan.hasNext()){
			
			String str = candidateScan.nextLine();
			buffer.append(str);
	//		 line separator
			buffer.append("||");
		}
		candidateScan.close();
		
		while(transactionScan.hasNext()){
			
			String papaya = transactionScan.nextLine().trim();
			if(papaya.contains(" ")){
				papaya = papaya.replaceAll("\\s+",",");
				transactionBuffer.append(papaya);
			//	End of one transaction
				transactionBuffer.append("_");
		}
		}
		transactionScan.close();
		
		// Compares the UniqueItemSet for k=2 with TransactionDB.
		
					String s = buffer.toString();
				
					for(;s.indexOf("||") != -1;){
						System.out.println("At the start of for ---------------------------->");
						int delimeterindex = s.indexOf("||");
						String persistent=null;
						String split = s.substring(0, delimeterindex);
						StringTokenizer tokenizer = new StringTokenizer(split,",");
						while(tokenizer.hasMoreTokens()){
							String elements = tokenizer.nextToken();
							if(persistent == null){
								persistent = elements;
							}else{
								persistent = persistent.concat(",");
								persistent = persistent.concat(elements);
							}
						}
						System.out.println(" Outside for loop -------------------->  " + persistent);
							
//						 Else Part of this If statement is not required as we are comparing with more than pair {a,b}
						
						String transactionMainScanContainer = transactionBuffer.toString(); 
						int a=0;
						for(;( a = transactionMainScanContainer.indexOf("_"))!=-1;){
							int transactionDelimeterIndex = transactionMainScanContainer.indexOf("_");
							String tempString = transactionMainScanContainer.substring(0, transactionDelimeterIndex);
							List<String> tempList = new ArrayList<>();
							StringTokenizer tokenizers = new StringTokenizer(tempString,",");
							while(tokenizers.hasMoreTokens()){
								String elements = tokenizers.nextToken();
								tempList.add(elements);
							}
							
							itemSet.clear();
							if(persistent.contains(",")){
								String[] parts = persistent.split(",");
								itemSet.add(parts[0]);
								itemSet.add(parts[1]);
							}
							List<String> dummyitemSet = itemSet;
							
							if(tempList.size() >= dummyitemSet.size()){
								int dummyitemSize = dummyitemSet.size();

								if(dummyitemSet.retainAll(tempList)){
									int dummyitemSetSize = dummyitemSet.size();
									
									if(dummyitemSetSize == dummyitemSize){
										
										frequencycounter = frequencycounter+ 1;
										for(String finalItems : tempList){
											System.out.println("appending values");
											writer1.append(finalItems);
											writer1.append(",");
										}
										writer1.append("|||");
										writer1.append("\n");
									}
								}
							}
							transactionMainScanContainer = transactionMainScanContainer.substring(transactionDelimeterIndex+1, transactionMainScanContainer.length());
						}
						if((delimeterindex+2) < s.length()){
						 s = s.substring(delimeterindex+2, s.length());
						}
 					}
	}
}
