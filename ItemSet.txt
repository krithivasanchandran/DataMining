import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.StringTokenizer;


public class mining {

	public static void main(String args[]) throws IOException{
		
		File file = new File("C:/Users/KRITHIVASAN CHANDRAN/Desktop/proj_1/transactionDB.txt");
		PrintWriter writer = new PrintWriter("C:/Users/KRITHIVASAN CHANDRAN/Desktop/proj_1/madhu.txt", "UTF-8");
		PrintWriter writer1 = new PrintWriter("C:/Users/KRITHIVASAN CHANDRAN/Desktop/proj_1/output.txt", "UTF-8");
		int counter = 0;
		int k = 8;
		int p=0;
		Scanner input = new Scanner(file);
		Set<String> s = new HashSet<>();
		StringBuffer buffer = new StringBuffer();
		Map<String,String> itemSetMap = new HashMap<>();
	        
		while(input.hasNext()){
			    	String line = input.next();
			        line = line.replaceAll("\\s+",",");
			        
			        StringTokenizer tokens = new  StringTokenizer(line,",");
			        
			        while (tokens.hasMoreTokens()){
			           String temp = tokens.nextToken();
			           s.add(temp);
			         }
		}
		
        List<String> itemSet = new ArrayList<>();
        Map<Integer,List<String>> subset = new HashMap<>();
        int i =0;
        
        for(String str:s){
        	itemSet.add(str);
        }
        
        Collections.sort(itemSet);
        
        //Generating key value pairs - Key - Binary Numbers - Value - UniqueItemSets
      
        while(p<itemSet.size()){
        	itemSetMap.put(Integer.toBinaryString(p), itemSet.get(p));
			p++;
		}
        
        System.out.println(itemSetMap.entrySet());
        
        for(String sun : itemSet){
        	 writer1.append(sun+ " ,"+ "\n");
        }
        s.clear();
   
        
        while((k)<itemSet.size()){
                
        		for(int j=i;j<k;j++){
                	
                	String candidateKey = itemSet.get(j);
                	buffer.append(candidateKey+",");
                }
                counter = counter + 1;
                buffer.append("---"+counter);
                writer.append(buffer.toString());
                buffer.delete(0, buffer.length());
                i = i+1;
                k = k+1;
        	   	}
        	}
        }
